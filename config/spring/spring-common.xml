<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/aop/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <context:component-scan base-package="com.resource"/>

    <!--引入配置属性文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 开启AOP监听 只对当前配置文件有效 -->
    <!--<aop:aspectj-autoproxy expose-proxy="true"/>-->

    <!-- 1. 数据源 : DriverManagerDataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--<property name="loginTimeout" value="${loginTimeout}"/>-->
    </bean>

    <!--2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源MyBatis定义数据源,同意加载配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--加载mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
    </bean>

    <!--3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory-->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--<property name="mapperInterface" value="com.resource.mapper.UserMapper"/>-->
    <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->
    <!--basePackage:指定sql映射文件/接口所在的包（自动批量扫描）-->
    <!--如果是扫描多个包，如果需要扫描多个包，中间用半角的逗号隔开-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.resource.mapper"/>
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--5. 使用声明式事务transaction-manager：引用上面定义的事务管理器-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--通知-->
    <!--<tx:advice id="txAdvice">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash;传播行为&ndash;&gt;-->
            <!--<tx:method name="add*" propagation="REQUIRED"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
            <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.resource.service.impl.*.*(..))"/>-->
    <!--</aop:config>-->
</beans>
